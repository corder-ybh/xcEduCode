<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuecheng.manage_course.dao.CourseMapper">
    <select id="findCourseBaseById" parameterType="java.lang.String"
            resultType="com.xuecheng.framework.domain.course.CourseBase">
        select * from course_base where id = #{id}
    </select>
    <resultMap id="teachplanMap" type="com.xuecheng.framework.domain.course.TeachplanNode">
        <id property="id" column="one_id"/>
        <result property="pname" column="one_name"/>

        <collection property="children"
            ofType="com.xuecheng.framework.domain.course.ext.TeachplanNode">
            <id property="id" column="two_id"/>
            <result property="pname" column="two_name" />
            <collection property="children"
                ofType="com.xuecheng.framework.domain.course.ext.TeachplanNode">
                <id property="id" column="three_id"/>
                <result property="pname" column="three_name" />
            </collection>
        </collection>
    </resultMap>

    <select id="selectList" resultMap="teachplanMap" parameterType="java.lang.String">
        SELECT
            t1.id one_id,
            t1.pname one_name,
            t2.id two_id,
            t2.pname two_name,
            t3.id three_id,
            t3.pname three_name
        FROM teachplan t1
        LEFT JOIN teachplan t2 ON t1.id = t2.parentid
        LEFT JOIN teachplan t3 ON t2.id = t3.parentid
        WHERE t1.parentid = '0'
            -- AND t1.courseid=''
        ORDER BY t1.orderby,
            t2.orderby,
            t3.orderby
    </select>
</mapper>